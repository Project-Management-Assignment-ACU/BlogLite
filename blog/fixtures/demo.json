[
  {
    "model": "auth.user",
    "pk": 1,
    "fields": {
      "username": "demo",
      "password": "pbkdf2_sha256$600000$wMQZlnFkAltQGv6QZ0i84r$fQGbhWjjLO9mqWjg7/f5xyodTRRkSXcYGlbCvqOK8s0=",
      "email": "demo@example.com",
      "is_staff": true,
      "is_active": true,
      "is_superuser": true,
      "first_name": "Demo",
      "last_name": "User",
      "date_joined": "2023-05-01T12:00:00.000Z"
    }
  },
  {
    "model": "blog.blogpost",
    "pk": 1,
    "fields": {
      "title": "Welcome to Simple Blog",
      "slug": "welcome-to-simple-blog",
      "body": "This is your first post in Simple Blog! You can create, edit, and delete posts.\r\n\r\nSimple Blog is a lightweight Django blogging platform designed for simplicity and ease of use. It provides all essential blogging functionality without unnecessary complexity.\r\n\r\n## Features\r\n\r\n- Clean, responsive design using Bootstrap 5\r\n- Simple post management with CRUD operations\r\n- User authentication and authorization\r\n- Contact form with email notifications\r\n- Full-text search for blog posts\r\n\r\nFeel free to edit or delete this post to get started with your own content.",
      "created_on": "2023-05-01T12:30:00.000Z",
      "updated_on": "2023-05-01T12:30:00.000Z",
      "author": 1
    }
  },
  {
    "model": "blog.blogpost",
    "pk": 2,
    "fields": {
      "title": "Getting Started with Markdown",
      "slug": "getting-started-with-markdown",
      "body": "Simple Blog supports Markdown formatting for your blog posts. This allows you to add rich formatting to your content using simple text-based syntax.\r\n\r\n## Markdown Basics\r\n\r\n### Headings\r\n\r\n```\r\n# Heading 1\r\n## Heading 2\r\n### Heading 3\r\n```\r\n\r\n### Emphasis\r\n\r\n```\r\n*italic* or _italic_\r\n**bold** or __bold__\r\n```\r\n\r\n### Lists\r\n\r\n```\r\n- Item 1\r\n- Item 2\r\n  - Subitem 2.1\r\n  - Subitem 2.2\r\n\r\n1. First item\r\n2. Second item\r\n```\r\n\r\n### Links\r\n\r\n```\r\n[Link text](http://example.com)\r\n```\r\n\r\n### Images\r\n\r\n```\r\n![Alt text](image-url.jpg)\r\n```\r\n\r\n### Code\r\n\r\n```\r\n`inline code`\r\n```\r\n\r\nCode blocks:\r\n\r\n```\r\n```python\r\ndef hello_world():\r\n    print('Hello, World!')\r\n```\r\n```\r\n\r\nExperiment with these Markdown elements in your posts!",
      "created_on": "2023-05-02T10:15:00.000Z",
      "updated_on": "2023-05-02T10:15:00.000Z",
      "author": 1
    }
  },
  {
    "model": "blog.blogpost",
    "pk": 3,
    "fields": {
      "title": "Tips for Writing Great Blog Posts",
      "slug": "tips-for-writing-great-blog-posts",
      "body": "Creating engaging content is essential for a successful blog. Here are some tips to help you write effective blog posts:\r\n\r\n1. **Know your audience**: Understand who you're writing for and what they're interested in.\r\n\r\n2. **Create compelling headlines**: Your title should grab attention and clearly indicate what the post is about.\r\n\r\n3. **Start with an outline**: Structure your thoughts before you begin writing.\r\n\r\n4. **Use short paragraphs**: Break up your content into digestible chunks.\r\n\r\n5. **Include visuals**: Images and diagrams can enhance understanding and engagement.\r\n\r\n6. **Add subheadings**: Use H2 and H3 headings to organize your content logically.\r\n\r\n7. **Use examples**: Illustrate your points with real-world examples.\r\n\r\n8. **Proofread carefully**: Check for spelling and grammar errors before publishing.\r\n\r\n9. **End with a call to action**: Encourage readers to comment, share, or apply what they've learned.\r\n\r\n10. **Be consistent**: Maintain a regular posting schedule to build a loyal readership.\r\n\r\nWhat strategies do you use when writing blog posts? Feel free to share in the comments!",
      "created_on": "2023-05-03T14:45:00.000Z",
      "updated_on": "2023-05-03T14:45:00.000Z",
      "author": 1
    }
  },
  {
    "model": "blog.blogpost",
    "pk": 4,
    "fields": {
      "title": "The Power of Django for Web Development",
      "slug": "the-power-of-django-for-web-development",
      "body": "Django is a high-level Python web framework that enables rapid development of secure and maintainable websites. Built by experienced developers, Django takes care of much of the hassle of web development.\r\n\r\n## Why Choose Django?\r\n\r\n### Completeness\r\nDjango follows the \"batteries-included\" philosophy and provides almost everything developers might want to do \"out of the box\".\r\n\r\n### Versatility\r\nDjango can build almost any type of website â€” from content management systems and wikis to social networks and news sites.\r\n\r\n### Security\r\nDjango helps developers avoid many common security mistakes, such as SQL injection, cross-site scripting, cross-site request forgery and clickjacking.\r\n\r\n### Scalability\r\nDjango uses a component-based architecture, which means you can scale for increased traffic by adding hardware at any level: caching servers, database servers, or application servers.\r\n\r\n### Maintainability\r\nDjango code is written using design principles and patterns that encourage the creation of maintainable and reusable code.\r\n\r\n### Portability\r\nDjango is written in Python, which runs on many platforms.\r\n\r\nThis Simple Blog application is built with Django, demonstrating the ease of creating fully-featured web applications with this powerful framework.",
      "created_on": "2023-05-04T09:20:00.000Z",
      "updated_on": "2023-05-04T09:20:00.000Z",
      "author": 1
    }
  },
  {
    "model": "blog.blogpost",
    "pk": 5,
    "fields": {
      "title": "Customizing Your Simple Blog",
      "slug": "customizing-your-simple-blog",
      "body": "Simple Blog is designed to be easily customizable. Here are some ways you can make this blog your own:\r\n\r\n## Visual Customization\r\n\r\n1. **Theme Colors**: Edit the CSS variables in the static files to change the color scheme.\r\n2. **Typography**: Modify the font families and sizes in the CSS.\r\n3. **Layout**: Adjust the templates to change the page layout and structure.\r\n\r\n## Functional Customization\r\n\r\n1. **Additional Features**: Add categories, tags, or comments to posts.\r\n2. **Social Integration**: Incorporate social media sharing buttons.\r\n3. **Analytics**: Add Google Analytics or other tracking tools.\r\n\r\n## Advanced Customization\r\n\r\n1. **Custom User Model**: Extend the user model for additional profile information.\r\n2. **Rich Text Editor**: Integrate a WYSIWYG editor for post creation.\r\n3. **Image Uploads**: Implement image upload functionality for blog posts.\r\n\r\nRemember, Django's modular architecture makes it easy to extend functionality without modifying the core application. Try these customizations to make Simple Blog perfectly suited to your needs!",
      "created_on": "2023-05-05T16:30:00.000Z",
      "updated_on": "2023-05-05T16:30:00.000Z",
      "author": 1
    }
  }
] 